#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowService.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Collectex")]
	public partial class CollectexDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPaymentsScheduled(PaymentsScheduled instance);
    partial void UpdatePaymentsScheduled(PaymentsScheduled instance);
    partial void DeletePaymentsScheduled(PaymentsScheduled instance);
    partial void InsertPaymentArrangement(PaymentArrangement instance);
    partial void UpdatePaymentArrangement(PaymentArrangement instance);
    partial void DeletePaymentArrangement(PaymentArrangement instance);
    partial void InsertLog(Log instance);
    partial void UpdateLog(Log instance);
    partial void DeleteLog(Log instance);
    #endregion
		
		public CollectexDBDataContext() : 
				base(global::WindowService.Properties.Settings.Default.CollectexConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CollectexDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CollectexDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CollectexDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CollectexDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PaymentsScheduled> PaymentsScheduleds
		{
			get
			{
				return this.GetTable<PaymentsScheduled>();
			}
		}
		
		public System.Data.Linq.Table<PaymentArrangement> PaymentArrangements
		{
			get
			{
				return this.GetTable<PaymentArrangement>();
			}
		}
		
		public System.Data.Linq.Table<Log> Logs
		{
			get
			{
				return this.GetTable<Log>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentsScheduled")]
	public partial class PaymentsScheduled : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentScheduledID;
		
		private int _PaymentArrangementID;
		
		private System.DateTime _DateDue;
		
		private decimal _ScheduledPayment;
		
		private System.Nullable<decimal> _TotalScheduled;
		
		private System.Nullable<decimal> _FcastBalance;
		
		private System.Nullable<decimal> _Allocated;
		
		private System.Nullable<decimal> _TotalDue;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private System.Nullable<bool> _ProcesseFund;
		
		private System.Nullable<bool> _RequestSent;
		
		private System.Nullable<bool> _GotResponse;
		
		private EntitySet<Log> _Logs;
		
		private EntityRef<PaymentArrangement> _PaymentArrangement;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentScheduledIDChanging(int value);
    partial void OnPaymentScheduledIDChanged();
    partial void OnPaymentArrangementIDChanging(int value);
    partial void OnPaymentArrangementIDChanged();
    partial void OnDateDueChanging(System.DateTime value);
    partial void OnDateDueChanged();
    partial void OnScheduledPaymentChanging(decimal value);
    partial void OnScheduledPaymentChanged();
    partial void OnTotalScheduledChanging(System.Nullable<decimal> value);
    partial void OnTotalScheduledChanged();
    partial void OnFcastBalanceChanging(System.Nullable<decimal> value);
    partial void OnFcastBalanceChanged();
    partial void OnAllocatedChanging(System.Nullable<decimal> value);
    partial void OnAllocatedChanged();
    partial void OnTotalDueChanging(System.Nullable<decimal> value);
    partial void OnTotalDueChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    partial void OnProcesseFundChanging(System.Nullable<bool> value);
    partial void OnProcesseFundChanged();
    partial void OnRequestSentChanging(System.Nullable<bool> value);
    partial void OnRequestSentChanged();
    partial void OnGotResponseChanging(System.Nullable<bool> value);
    partial void OnGotResponseChanged();
    #endregion
		
		public PaymentsScheduled()
		{
			this._Logs = new EntitySet<Log>(new Action<Log>(this.attach_Logs), new Action<Log>(this.detach_Logs));
			this._PaymentArrangement = default(EntityRef<PaymentArrangement>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentScheduledID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int PaymentScheduledID
		{
			get
			{
				return this._PaymentScheduledID;
			}
			set
			{
				if ((this._PaymentScheduledID != value))
				{
					this.OnPaymentScheduledIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentScheduledID = value;
					this.SendPropertyChanged("PaymentScheduledID");
					this.OnPaymentScheduledIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentArrangementID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PaymentArrangementID
		{
			get
			{
				return this._PaymentArrangementID;
			}
			set
			{
				if ((this._PaymentArrangementID != value))
				{
					if (this._PaymentArrangement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentArrangementIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentArrangementID = value;
					this.SendPropertyChanged("PaymentArrangementID");
					this.OnPaymentArrangementIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDue", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime DateDue
		{
			get
			{
				return this._DateDue;
			}
			set
			{
				if ((this._DateDue != value))
				{
					this.OnDateDueChanging(value);
					this.SendPropertyChanging();
					this._DateDue = value;
					this.SendPropertyChanged("DateDue");
					this.OnDateDueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledPayment", DbType="Money NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal ScheduledPayment
		{
			get
			{
				return this._ScheduledPayment;
			}
			set
			{
				if ((this._ScheduledPayment != value))
				{
					this.OnScheduledPaymentChanging(value);
					this.SendPropertyChanging();
					this._ScheduledPayment = value;
					this.SendPropertyChanged("ScheduledPayment");
					this.OnScheduledPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalScheduled", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TotalScheduled
		{
			get
			{
				return this._TotalScheduled;
			}
			set
			{
				if ((this._TotalScheduled != value))
				{
					this.OnTotalScheduledChanging(value);
					this.SendPropertyChanging();
					this._TotalScheduled = value;
					this.SendPropertyChanged("TotalScheduled");
					this.OnTotalScheduledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FcastBalance", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> FcastBalance
		{
			get
			{
				return this._FcastBalance;
			}
			set
			{
				if ((this._FcastBalance != value))
				{
					this.OnFcastBalanceChanging(value);
					this.SendPropertyChanging();
					this._FcastBalance = value;
					this.SendPropertyChanged("FcastBalance");
					this.OnFcastBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Allocated", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Allocated
		{
			get
			{
				return this._Allocated;
			}
			set
			{
				if ((this._Allocated != value))
				{
					this.OnAllocatedChanging(value);
					this.SendPropertyChanging();
					this._Allocated = value;
					this.SendPropertyChanged("Allocated");
					this.OnAllocatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDue", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TotalDue
		{
			get
			{
				return this._TotalDue;
			}
			set
			{
				if ((this._TotalDue != value))
				{
					this.OnTotalDueChanging(value);
					this.SendPropertyChanging();
					this._TotalDue = value;
					this.SendPropertyChanged("TotalDue");
					this.OnTotalDueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcesseFund", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> ProcesseFund
		{
			get
			{
				return this._ProcesseFund;
			}
			set
			{
				if ((this._ProcesseFund != value))
				{
					this.OnProcesseFundChanging(value);
					this.SendPropertyChanging();
					this._ProcesseFund = value;
					this.SendPropertyChanged("ProcesseFund");
					this.OnProcesseFundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestSent", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> RequestSent
		{
			get
			{
				return this._RequestSent;
			}
			set
			{
				if ((this._RequestSent != value))
				{
					this.OnRequestSentChanging(value);
					this.SendPropertyChanging();
					this._RequestSent = value;
					this.SendPropertyChanged("RequestSent");
					this.OnRequestSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GotResponse", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> GotResponse
		{
			get
			{
				return this._GotResponse;
			}
			set
			{
				if ((this._GotResponse != value))
				{
					this.OnGotResponseChanging(value);
					this.SendPropertyChanging();
					this._GotResponse = value;
					this.SendPropertyChanged("GotResponse");
					this.OnGotResponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentsScheduled_Log", Storage="_Logs", ThisKey="PaymentScheduledID", OtherKey="ScheduleID")]
		public EntitySet<Log> Logs
		{
			get
			{
				return this._Logs;
			}
			set
			{
				this._Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentArrangement_PaymentsScheduled", Storage="_PaymentArrangement", ThisKey="PaymentArrangementID", OtherKey="PaymentArrangementID", IsForeignKey=true)]
		public PaymentArrangement PaymentArrangement
		{
			get
			{
				return this._PaymentArrangement.Entity;
			}
			set
			{
				PaymentArrangement previousValue = this._PaymentArrangement.Entity;
				if (((previousValue != value) 
							|| (this._PaymentArrangement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentArrangement.Entity = null;
						previousValue.PaymentsScheduleds.Remove(this);
					}
					this._PaymentArrangement.Entity = value;
					if ((value != null))
					{
						value.PaymentsScheduleds.Add(this);
						this._PaymentArrangementID = value.PaymentArrangementID;
					}
					else
					{
						this._PaymentArrangementID = default(int);
					}
					this.SendPropertyChanged("PaymentArrangement");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Logs(Log entity)
		{
			this.SendPropertyChanging();
			entity.PaymentsScheduled = this;
		}
		
		private void detach_Logs(Log entity)
		{
			this.SendPropertyChanging();
			entity.PaymentsScheduled = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentArrangements")]
	public partial class PaymentArrangement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentArrangementID;
		
		private int _DebtorID;
		
		private int _PaymentPeriodID;
		
		private System.Nullable<byte> _Days;
		
		private System.Nullable<bool> _SendLetterOrSMS;
		
		private System.Nullable<byte> _LetterOrSMS;
		
		private System.Nullable<byte> _SendLetterOrSMSNoOfDayPrior;
		
		private System.Nullable<bool> _CloseAccountOnCompletion;
		
		private int _PaymentTypeID;
		
		private System.Nullable<int> _FirstChequeNo;
		
		private string _BankAccount;
		
		private string _BankName;
		
		private string _Branch;
		
		private string _BSBOrRouting;
		
		private string _Drawer;
		
		private System.Nullable<System.DateTime> _FirstPaymentDate;
		
		private System.Nullable<decimal> _InitialPaymentPromised;
		
		private System.Nullable<decimal> _DefaultPaymentAmount;
		
		private System.Nullable<bool> _SettleForLess;
		
		private System.Nullable<byte> _ArrangementLetterDaysPrior;
		
		private string _ArrangementLetter;
		
		private System.Data.Linq.Binary _TimeStamp;
		
		private EntitySet<PaymentsScheduled> _PaymentsScheduleds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentArrangementIDChanging(int value);
    partial void OnPaymentArrangementIDChanged();
    partial void OnDebtorIDChanging(int value);
    partial void OnDebtorIDChanged();
    partial void OnPaymentPeriodIDChanging(int value);
    partial void OnPaymentPeriodIDChanged();
    partial void OnDaysChanging(System.Nullable<byte> value);
    partial void OnDaysChanged();
    partial void OnSendLetterOrSMSChanging(System.Nullable<bool> value);
    partial void OnSendLetterOrSMSChanged();
    partial void OnLetterOrSMSChanging(System.Nullable<byte> value);
    partial void OnLetterOrSMSChanged();
    partial void OnSendLetterOrSMSNoOfDayPriorChanging(System.Nullable<byte> value);
    partial void OnSendLetterOrSMSNoOfDayPriorChanged();
    partial void OnCloseAccountOnCompletionChanging(System.Nullable<bool> value);
    partial void OnCloseAccountOnCompletionChanged();
    partial void OnPaymentTypeIDChanging(int value);
    partial void OnPaymentTypeIDChanged();
    partial void OnFirstChequeNoChanging(System.Nullable<int> value);
    partial void OnFirstChequeNoChanged();
    partial void OnBankAccountChanging(string value);
    partial void OnBankAccountChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnBSBOrRoutingChanging(string value);
    partial void OnBSBOrRoutingChanged();
    partial void OnDrawerChanging(string value);
    partial void OnDrawerChanged();
    partial void OnFirstPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFirstPaymentDateChanged();
    partial void OnInitialPaymentPromisedChanging(System.Nullable<decimal> value);
    partial void OnInitialPaymentPromisedChanged();
    partial void OnDefaultPaymentAmountChanging(System.Nullable<decimal> value);
    partial void OnDefaultPaymentAmountChanged();
    partial void OnSettleForLessChanging(System.Nullable<bool> value);
    partial void OnSettleForLessChanged();
    partial void OnArrangementLetterDaysPriorChanging(System.Nullable<byte> value);
    partial void OnArrangementLetterDaysPriorChanged();
    partial void OnArrangementLetterChanging(string value);
    partial void OnArrangementLetterChanged();
    partial void OnTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnTimeStampChanged();
    #endregion
		
		public PaymentArrangement()
		{
			this._PaymentsScheduleds = new EntitySet<PaymentsScheduled>(new Action<PaymentsScheduled>(this.attach_PaymentsScheduleds), new Action<PaymentsScheduled>(this.detach_PaymentsScheduleds));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentArrangementID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int PaymentArrangementID
		{
			get
			{
				return this._PaymentArrangementID;
			}
			set
			{
				if ((this._PaymentArrangementID != value))
				{
					this.OnPaymentArrangementIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentArrangementID = value;
					this.SendPropertyChanged("PaymentArrangementID");
					this.OnPaymentArrangementIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebtorID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int DebtorID
		{
			get
			{
				return this._DebtorID;
			}
			set
			{
				if ((this._DebtorID != value))
				{
					this.OnDebtorIDChanging(value);
					this.SendPropertyChanging();
					this._DebtorID = value;
					this.SendPropertyChanged("DebtorID");
					this.OnDebtorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentPeriodID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PaymentPeriodID
		{
			get
			{
				return this._PaymentPeriodID;
			}
			set
			{
				if ((this._PaymentPeriodID != value))
				{
					this.OnPaymentPeriodIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentPeriodID = value;
					this.SendPropertyChanged("PaymentPeriodID");
					this.OnPaymentPeriodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Days", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this.OnDaysChanging(value);
					this.SendPropertyChanging();
					this._Days = value;
					this.SendPropertyChanged("Days");
					this.OnDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendLetterOrSMS", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> SendLetterOrSMS
		{
			get
			{
				return this._SendLetterOrSMS;
			}
			set
			{
				if ((this._SendLetterOrSMS != value))
				{
					this.OnSendLetterOrSMSChanging(value);
					this.SendPropertyChanging();
					this._SendLetterOrSMS = value;
					this.SendPropertyChanged("SendLetterOrSMS");
					this.OnSendLetterOrSMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LetterOrSMS", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> LetterOrSMS
		{
			get
			{
				return this._LetterOrSMS;
			}
			set
			{
				if ((this._LetterOrSMS != value))
				{
					this.OnLetterOrSMSChanging(value);
					this.SendPropertyChanging();
					this._LetterOrSMS = value;
					this.SendPropertyChanged("LetterOrSMS");
					this.OnLetterOrSMSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendLetterOrSMSNoOfDayPrior", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> SendLetterOrSMSNoOfDayPrior
		{
			get
			{
				return this._SendLetterOrSMSNoOfDayPrior;
			}
			set
			{
				if ((this._SendLetterOrSMSNoOfDayPrior != value))
				{
					this.OnSendLetterOrSMSNoOfDayPriorChanging(value);
					this.SendPropertyChanging();
					this._SendLetterOrSMSNoOfDayPrior = value;
					this.SendPropertyChanged("SendLetterOrSMSNoOfDayPrior");
					this.OnSendLetterOrSMSNoOfDayPriorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseAccountOnCompletion", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> CloseAccountOnCompletion
		{
			get
			{
				return this._CloseAccountOnCompletion;
			}
			set
			{
				if ((this._CloseAccountOnCompletion != value))
				{
					this.OnCloseAccountOnCompletionChanging(value);
					this.SendPropertyChanging();
					this._CloseAccountOnCompletion = value;
					this.SendPropertyChanged("CloseAccountOnCompletion");
					this.OnCloseAccountOnCompletionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeID", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int PaymentTypeID
		{
			get
			{
				return this._PaymentTypeID;
			}
			set
			{
				if ((this._PaymentTypeID != value))
				{
					this.OnPaymentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeID = value;
					this.SendPropertyChanged("PaymentTypeID");
					this.OnPaymentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstChequeNo", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> FirstChequeNo
		{
			get
			{
				return this._FirstChequeNo;
			}
			set
			{
				if ((this._FirstChequeNo != value))
				{
					this.OnFirstChequeNoChanging(value);
					this.SendPropertyChanging();
					this._FirstChequeNo = value;
					this.SendPropertyChanged("FirstChequeNo");
					this.OnFirstChequeNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccount", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string BankAccount
		{
			get
			{
				return this._BankAccount;
			}
			set
			{
				if ((this._BankAccount != value))
				{
					this.OnBankAccountChanging(value);
					this.SendPropertyChanging();
					this._BankAccount = value;
					this.SendPropertyChanged("BankAccount");
					this.OnBankAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSBOrRouting", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string BSBOrRouting
		{
			get
			{
				return this._BSBOrRouting;
			}
			set
			{
				if ((this._BSBOrRouting != value))
				{
					this.OnBSBOrRoutingChanging(value);
					this.SendPropertyChanging();
					this._BSBOrRouting = value;
					this.SendPropertyChanged("BSBOrRouting");
					this.OnBSBOrRoutingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Drawer", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Drawer
		{
			get
			{
				return this._Drawer;
			}
			set
			{
				if ((this._Drawer != value))
				{
					this.OnDrawerChanging(value);
					this.SendPropertyChanging();
					this._Drawer = value;
					this.SendPropertyChanged("Drawer");
					this.OnDrawerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstPaymentDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> FirstPaymentDate
		{
			get
			{
				return this._FirstPaymentDate;
			}
			set
			{
				if ((this._FirstPaymentDate != value))
				{
					this.OnFirstPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._FirstPaymentDate = value;
					this.SendPropertyChanged("FirstPaymentDate");
					this.OnFirstPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialPaymentPromised", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> InitialPaymentPromised
		{
			get
			{
				return this._InitialPaymentPromised;
			}
			set
			{
				if ((this._InitialPaymentPromised != value))
				{
					this.OnInitialPaymentPromisedChanging(value);
					this.SendPropertyChanging();
					this._InitialPaymentPromised = value;
					this.SendPropertyChanged("InitialPaymentPromised");
					this.OnInitialPaymentPromisedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultPaymentAmount", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> DefaultPaymentAmount
		{
			get
			{
				return this._DefaultPaymentAmount;
			}
			set
			{
				if ((this._DefaultPaymentAmount != value))
				{
					this.OnDefaultPaymentAmountChanging(value);
					this.SendPropertyChanging();
					this._DefaultPaymentAmount = value;
					this.SendPropertyChanged("DefaultPaymentAmount");
					this.OnDefaultPaymentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettleForLess", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> SettleForLess
		{
			get
			{
				return this._SettleForLess;
			}
			set
			{
				if ((this._SettleForLess != value))
				{
					this.OnSettleForLessChanging(value);
					this.SendPropertyChanging();
					this._SettleForLess = value;
					this.SendPropertyChanged("SettleForLess");
					this.OnSettleForLessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrangementLetterDaysPrior", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> ArrangementLetterDaysPrior
		{
			get
			{
				return this._ArrangementLetterDaysPrior;
			}
			set
			{
				if ((this._ArrangementLetterDaysPrior != value))
				{
					this.OnArrangementLetterDaysPriorChanging(value);
					this.SendPropertyChanging();
					this._ArrangementLetterDaysPrior = value;
					this.SendPropertyChanged("ArrangementLetterDaysPrior");
					this.OnArrangementLetterDaysPriorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArrangementLetter", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string ArrangementLetter
		{
			get
			{
				return this._ArrangementLetter;
			}
			set
			{
				if ((this._ArrangementLetter != value))
				{
					this.OnArrangementLetterChanging(value);
					this.SendPropertyChanging();
					this._ArrangementLetter = value;
					this.SendPropertyChanged("ArrangementLetter");
					this.OnArrangementLetterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentArrangement_PaymentsScheduled", Storage="_PaymentsScheduleds", ThisKey="PaymentArrangementID", OtherKey="PaymentArrangementID")]
		public EntitySet<PaymentsScheduled> PaymentsScheduleds
		{
			get
			{
				return this._PaymentsScheduleds;
			}
			set
			{
				this._PaymentsScheduleds.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentsScheduleds(PaymentsScheduled entity)
		{
			this.SendPropertyChanging();
			entity.PaymentArrangement = this;
		}
		
		private void detach_PaymentsScheduleds(PaymentsScheduled entity)
		{
			this.SendPropertyChanging();
			entity.PaymentArrangement = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logs")]
	public partial class Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _DebtorID;
		
		private string _Response;
		
		private System.Nullable<int> _ScheduleID;
		
		private EntityRef<PaymentsScheduled> _PaymentsScheduled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDebtorIDChanging(System.Nullable<int> value);
    partial void OnDebtorIDChanged();
    partial void OnResponseChanging(string value);
    partial void OnResponseChanged();
    partial void OnScheduleIDChanging(System.Nullable<int> value);
    partial void OnScheduleIDChanged();
    #endregion
		
		public Log()
		{
			this._PaymentsScheduled = default(EntityRef<PaymentsScheduled>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebtorID", DbType="Int")]
		public System.Nullable<int> DebtorID
		{
			get
			{
				return this._DebtorID;
			}
			set
			{
				if ((this._DebtorID != value))
				{
					this.OnDebtorIDChanging(value);
					this.SendPropertyChanging();
					this._DebtorID = value;
					this.SendPropertyChanged("DebtorID");
					this.OnDebtorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Response", DbType="VarChar(MAX)")]
		public string Response
		{
			get
			{
				return this._Response;
			}
			set
			{
				if ((this._Response != value))
				{
					this.OnResponseChanging(value);
					this.SendPropertyChanging();
					this._Response = value;
					this.SendPropertyChanged("Response");
					this.OnResponseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleID", DbType="Int")]
		public System.Nullable<int> ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					if (this._PaymentsScheduled.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleID = value;
					this.SendPropertyChanged("ScheduleID");
					this.OnScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentsScheduled_Log", Storage="_PaymentsScheduled", ThisKey="ScheduleID", OtherKey="PaymentScheduledID", IsForeignKey=true)]
		public PaymentsScheduled PaymentsScheduled
		{
			get
			{
				return this._PaymentsScheduled.Entity;
			}
			set
			{
				PaymentsScheduled previousValue = this._PaymentsScheduled.Entity;
				if (((previousValue != value) 
							|| (this._PaymentsScheduled.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentsScheduled.Entity = null;
						previousValue.Logs.Remove(this);
					}
					this._PaymentsScheduled.Entity = value;
					if ((value != null))
					{
						value.Logs.Add(this);
						this._ScheduleID = value.PaymentScheduledID;
					}
					else
					{
						this._ScheduleID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PaymentsScheduled");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
